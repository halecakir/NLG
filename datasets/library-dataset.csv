LIB1,android.support.constraint
URL ,https://developer.android.com/reference/android/support/constraint/package-summary
class-name,class-description
Barrier,"A Barrier references multiple widgets as input, and creates a virtual guideline based on the most extreme widget on the specified side."
ConstraintLayout,A ConstraintLayout is a android.view.ViewGroup which allows you to position and size widgets in a flexible way.
ConstraintLayout.LayoutParams,This class contains the different attributes specifying how a view want to be laid out inside a ConstraintLayout.
ConstraintProperties,Added in 2.0 ConstraintProperties provides an easy to use api to update the layout params of ConstraintLayout children
ConstraintsChangedListener,Added in 2.0 Callbacks on state change
ConstraintSet,This class allows you to define programmatically a set of constraints to be used with ConstraintLayout.
Group,Added in 1.1 This class controls the visibility of a set of referenced widgets.
Guideline,Utility class representing a Guideline helper object for ConstraintLayout.
Placeholder,Added in 1.1 A Placeholder provides a virtual object which can position an existing object.
class-of-method,method-name-description
Barrier,allowsGoneWidget()
Barrier,getMargin() Returns the barrier margin
Barrier,getReferencedIds() Helpers typically reference a collection of ids
Barrier,"getType() Get the barrier type (Barrier.LEFT, Barrier.TOP, Barrier.RIGHT, Barrier.BOTTOM, Barrier.END, Barrier.START)"
Barrier,"loadParameters(ConstraintSet.Constraint constraint, HelperWidget child, ConstraintLayout.LayoutParams layoutParams, mapIdToWidget)"
Barrier,"resolveRtl(ConstraintWidget widget, boolean isRtl)"
Barrier,setAllowsGoneWidget(boolean supportGone)
Barrier,setDpMargin(int margin) Set a margin on the barrier
Barrier,setMargin(int margin) Set the barrier margin
Barrier,setReferencedIds(int[] ids) Helpers typically reference a collection of ids
Barrier,"setType(int type) Set the barrier type (Barrier.LEFT, Barrier.TOP, Barrier.RIGHT, Barrier.BOTTOM, Barrier.END, Barrier.START)"
Barrier,updatePostConstraints(ConstraintLayout constainer)
Barrier,"updatePreLayout(ConstraintWidgetContainer container, Helper helper, map)"
Barrier,getViews(ConstraintLayout layout)
ConstraintLayout,getMaxHeight() The maximum height of this view.
ConstraintLayout,getMaxWidth()
ConstraintLayout,getMinHeight() The minimum height of this view.
ConstraintLayout,getMinWidth() The minimum width of this view.
ConstraintLayout,getOptimizationLevel() Return the current optimization level for the layout resolution
ConstraintLayout,loadLayoutDescription(int layoutDescription) Load a layout description file from the resources.
ConstraintLayout,requestLayout()
ConstraintLayout,"resolveSystem(int widthMeasureSpec, int heightMeasureSpec)"
ConstraintLayout,setConstraintSet(ConstraintSet set) Sets a ConstraintSet object to manage constraints.
ConstraintLayout,setMaxHeight(int value) Set the max height for this view
ConstraintLayout,setMaxWidth(int value) Set the max width for this view
ConstraintLayout,setMinHeight(int value) Set the min height for this view
ConstraintLayout,setMinWidth(int value) Set the min width for this view
ConstraintLayout,setOnConstraintsChanged(ConstraintsChangedListener constraintsChangedListener)
ConstraintLayout,setOptimizationLevel(int level) Set the optimization for the layout resolution.
ConstraintLayout,"setState(int id, int screenWidth, int screenHeight) Set the State of the ConstraintLayout, causing it to load a particular ConstraintSet."
ConstraintLayout,"applyConstraintsFromLayoutParams(boolean isInEditMode, View child, ConstraintWidget widget, ConstraintLayout.LayoutParams layoutParams, idToWidget)"
ConstraintLayout,checkLayoutParams(ViewGroup.LayoutParams p)
ConstraintLayout,generateDefaultLayoutParams()
ConstraintLayout,generateLayoutParams(ViewGroup.LayoutParams p)
ConstraintLayout,"onLayout(boolean changed, int left, int top, int right, int bottom)"
ConstraintLayout,"onMeasure(int widthMeasureSpec, int heightMeasureSpec)"
ConstraintLayout,parseLayoutDescription(int id) Subclasses can override the handling of layoutDescription
ConstraintLayout.LayoutParams,getConstraintTag() Tag that can be used to identify a view as being a member of a group.
ConstraintLayout.LayoutParams,reset()
ConstraintLayout.LayoutParams,resolveLayoutDirection(int layoutDirection)
ConstraintLayout.LayoutParams,validate()
ConstraintProperties,"addToHorizontalChain(int leftId, int rightId) Adds the view to a horizontal chain."
ConstraintProperties,"addToHorizontalChainRTL(int leftId, int rightId) Adds the view to a horizontal chain using RTL attributes."
ConstraintProperties,"addToVerticalChain(int topId, int bottomId) Adds a view to a vertical chain."
ConstraintProperties,alpha(float alpha) Adjust the alpha of a view.
ConstraintProperties,apply()
ConstraintProperties,"center(int firstID, int firstSide, int firstMargin, int secondId, int secondSide, int secondMargin, float bias) Center view between the other two widgets."
ConstraintProperties,centerHorizontally(int toView) Centers the view horizontally relative to toView's position.
ConstraintProperties,"centerHorizontally(int leftId, int leftSide, int leftMargin, int rightId, int rightSide, int rightMargin, float bias) Centers the widget horizontally to the left and right side on another widgets sides."
ConstraintProperties,centerHorizontallyRtl(int toView) Centers the view horizontally relative to toView's position.
ConstraintProperties,"centerHorizontallyRtl(int startId, int startSide, int startMargin, int endId, int endSide, int endMargin, float bias) Centers the widgets horizontally to the left and right side on another widgets sides."
ConstraintProperties,"centerVertically(int topId, int topSide, int topMargin, int bottomId, int bottomSide, int bottomMargin, float bias) Centers the widgets Vertically to the top and bottom side on another widgets sides."
ConstraintProperties,centerVertically(int toView) Centers the view vertically relative to toView's position.
ConstraintProperties,"connect(int startSide, int endID, int endSide, int margin) Create a constraint between two widgets."
ConstraintProperties,constrainDefaultHeight(int height) Sets how the height is calculated ether MATCH_CONSTRAINT_WRAP or MATCH_CONSTRAINT_SPREAD.
ConstraintProperties,constrainDefaultWidth(int width) Sets how the width is calculated ether MATCH_CONSTRAINT_WRAP or MATCH_CONSTRAINT_SPREAD.
ConstraintProperties,constrainHeight(int height) Sets the height of the view.
ConstraintProperties,constrainMaxHeight(int height) Sets the maximum height of the view.
ConstraintProperties,constrainMaxWidth(int width) Sets the maximum width of the view.
ConstraintProperties,constrainMinHeight(int height) Sets the minimum height of the view.
ConstraintProperties,constrainMinWidth(int width) Sets the minimum width of the view.
ConstraintProperties,constrainWidth(int width) Sets the width of the view.
ConstraintProperties,dimensionRatio(String ratio) Constrains the views aspect ratio.
ConstraintProperties,elevation(float elevation) Set the elevation of a view.
ConstraintProperties,"goneMargin(int anchor, int value) Sets the gone margin."
ConstraintProperties,horizontalBias(float bias) Adjust the horizontal bias of the view (used with views constrained on left and right).
ConstraintProperties,horizontalChainStyle(int chainStyle) How the elements of the horizontal chain will be positioned.
ConstraintProperties,"horizontalWeight(float weight) The child's weight that we can use to distribute the available horizontal space in a chain, if the dimension behaviour is set to MATCH_CONSTRAINT"
ConstraintProperties,"margin(int anchor, int value) Sets the margin."
ConstraintProperties,removeConstraints(int anchor) Remove a constraint from this view.
ConstraintProperties,removeFromHorizontalChain() Removes a view from a vertical chain.
ConstraintProperties,removeFromVerticalChain() Removes a view from a vertical chain.
ConstraintProperties,rotation(float rotation) Adjust the post-layout rotation about the Z axis of a view.
ConstraintProperties,rotationX(float rotationX) Adjust the post-layout rotation about the X axis of a view.
ConstraintProperties,rotationY(float rotationY) Adjust the post-layout rotation about the Y axis of a view.
ConstraintProperties,scaleX(float scaleX) Adjust the post-layout scale in X of a view.
ConstraintProperties,scaleY(float scaleY) Adjust the post-layout scale in Y of a view.
ConstraintProperties,"transformPivot(float transformPivotX, float transformPivotY) Set X and Y location of the pivot point around which the view will rotate and scale."
ConstraintProperties,transformPivotX(float transformPivotX) Set X location of the pivot point around which the view will rotate and scale.
ConstraintProperties,transformPivotY(float transformPivotY) Set Y location of the pivot point around which the view will rotate and scale.
ConstraintProperties,"translation(float translationX, float translationY) Adjust the post-layout X and Y translation of a view."
ConstraintProperties,translationX(float translationX) Adjust the post-layout X translation of a view.
ConstraintProperties,translationY(float translationY) Adjust the post-layout Y translation of a view.
ConstraintProperties,translationZ(float translationZ) Adjust the post-layout translation in Z of a view.
ConstraintProperties,verticalBias(float bias) Adjust the vertical bias of the view (used with views constrained on left and right).
ConstraintProperties,verticalChainStyle(int chainStyle) How the elements of the vertical chain will be positioned.
ConstraintProperties,"verticalWeight(float weight) The child's weight that we can use to distribute the available vertical space in a chain, if the dimension behaviour is set to MATCH_CONSTRAINT"
ConstraintProperties,visibility(int visibility) Adjust the visibility of a view.
ConstraintsChangedListener,"postLayoutChange(int stateId, int constraintId) called after layout happens"
ConstraintsChangedListener,"preLayoutChange(int stateId, int constraintId) called before layout happens"
ConstraintSet,addColorAttributes(String... attributeName)
ConstraintSet,addFloatAttributes(String... attributeName)
ConstraintSet,addIntAttributes(String... attributeName)
ConstraintSet,addStringAttributes(String... attributeName)
ConstraintSet,"addToHorizontalChain(int viewId, int leftId, int rightId) Adds a view to a horizontal chain."
ConstraintSet,"addToHorizontalChainRTL(int viewId, int leftId, int rightId) Adds a view to a horizontal chain."
ConstraintSet,"addToVerticalChain(int viewId, int topId, int bottomId) Adds a view to a vertical chain."
ConstraintSet,applyCustomAttributes(ConstraintLayout constraintLayout) Apply custom attributes alone
ConstraintSet,applyTo(ConstraintLayout constraintLayout) Apply the constraints to a ConstraintLayout.
ConstraintSet,"applyToHelper(ConstraintHelper helper, ConstraintWidget child, ConstraintLayout.LayoutParams layoutParams, mapIdToWidget) Apply Layout to Helper widget"
ConstraintSet,"applyToLayoutParams(int id, ConstraintLayout.LayoutParams layoutParams) Fill in a ConstraintLayout LayoutParam based on the id."
ConstraintSet,applyToWithoutCustom(ConstraintLayout constraintLayout) Apply the constraints to a ConstraintLayout.
ConstraintSet,"center(int centerID, int firstID, int firstSide, int firstMargin, int secondId, int secondSide, int secondMargin, float bias) Center widget between the other two widgets."
ConstraintSet,"centerHorizontally(int centerID, int leftId, int leftSide, int leftMargin, int rightId, int rightSide, int rightMargin, float bias) Centers the widget horizontally to the left and right side on another widgets sides."
ConstraintSet,"centerHorizontally(int viewId, int toView) Centers the view horizontally relative to toView's position."
ConstraintSet,"centerHorizontallyRtl(int viewId, int toView) Centers the view horizontally relative to toView's position."
ConstraintSet,"centerHorizontallyRtl(int centerID, int startId, int startSide, int startMargin, int endId, int endSide, int endMargin, float bias) Centers the widgets horizontally to the left and right side on another widgets sides."
ConstraintSet,"centerVertically(int viewId, int toView) Centers the view vertically relative to toView's position."
ConstraintSet,"centerVertically(int centerID, int topId, int topSide, int topMargin, int bottomId, int bottomSide, int bottomMargin, float bias) Centers the widgets Vertically to the top and bottom side on another widgets sides."
ConstraintSet,"clear(int viewId, int anchor) Remove a constraint from this view."
ConstraintSet,clear(int viewId) Remove all constraints from this view.
ConstraintSet,"clone(Context context, int constraintLayoutId) Copy the constraints from a layout."
ConstraintSet,clone(ConstraintLayout constraintLayout) Copy the layout parameters of a ConstraintLayout.
ConstraintSet,clone(Constraints constraints) Copy the layout parameters of a ConstraintLayout.
ConstraintSet,clone(ConstraintSet set) Copy the constraints from a layout.
ConstraintSet,"connect(int startID, int startSide, int endID, int endSide, int margin) Create a constraint between two widgets."
ConstraintSet,"connect(int startID, int startSide, int endID, int endSide) Create a constraint between two widgets."
ConstraintSet,"constrainCircle(int viewId, int id, int radius, float angle) Constrain the view on a circle constraint"
ConstraintSet,"constrainDefaultHeight(int viewId, int height) Sets how the height is calculated ether MATCH_CONSTRAINT_WRAP or MATCH_CONSTRAINT_SPREAD."
ConstraintSet,"constrainDefaultWidth(int viewId, int width) Sets how the width is calculated ether MATCH_CONSTRAINT_WRAP or MATCH_CONSTRAINT_SPREAD."
ConstraintSet,"constrainHeight(int viewId, int height) Sets the height of the view."
ConstraintSet,"constrainMaxHeight(int viewId, int height) Sets the maximum height of the view."
ConstraintSet,"constrainMaxWidth(int viewId, int width) Sets the maximum width of the view."
ConstraintSet,"constrainMinHeight(int viewId, int height) Sets the height of the view."
ConstraintSet,"constrainMinWidth(int viewId, int width) Sets the width of the view."
ConstraintSet,"constrainPercentHeight(int viewId, float percent) Sets the height of the view as a percentage of the parent."
ConstraintSet,"constrainPercentWidth(int viewId, float percent) Sets the width of the view as a percentage of the parent."
ConstraintSet,"constrainWidth(int viewId, int width) Sets the width of the view."
ConstraintSet,"create(int guidelineID, int orientation) Creates a ConstraintLayout virtual object."
ConstraintSet,"createBarrier(int id, int direction, int margin, int... referenced) Creates a ConstraintLayout Barrier object."
ConstraintSet,"createHorizontalChain(int leftId, int leftSide, int rightId, int rightSide, int[] chainIds, float[] weights, int style) Spaces a set of widgets horizontal between the view startID and endId."
ConstraintSet,"createHorizontalChainRtl(int startId, int startSide, int endId, int endSide, int[] chainIds, float[] weights, int style) Spaces a set of widgets horizontal between the view startID and endId."
ConstraintSet,"createVerticalChain(int topId, int topSide, int bottomId, int bottomSide, int[] chainIds, float[] weights, int style) Spaces a set of widgets vertically between the view topId and bottomId."
ConstraintSet,getApplyElevation(int viewId) return with the constraint set will apply elevation for the specified view.
ConstraintSet,getCustomAttributeSet()
ConstraintSet,getParameters(int mId)
ConstraintSet,isForceId() Enforce id are required for all ConstraintLayout children to use ConstraintSet.
ConstraintSet,"load(Context context, int resourceId) Load a constraint set from a constraintSet.xml file."
ConstraintSet,"load(Context context, XmlPullParser parser) Load a constraint set from a constraintSet.xml file"
ConstraintSet,"parseColorAttributes(ConstraintSet.Constraint set, String attributes)"
ConstraintSet,"parseFloatAttributes(ConstraintSet.Constraint set, String attributes)"
ConstraintSet,"parseIntAttributes(ConstraintSet.Constraint set, String attributes)"
ConstraintSet,"parseStringAttributes(ConstraintSet.Constraint set, String attributes)"
ConstraintSet,readFallback(ConstraintLayout constraintLayout) This will copy Constraints from the ConstraintLayout if it does not have parameters
ConstraintSet,readFallback(ConstraintSet set) This will copy Constraints from the ConstraintSet
ConstraintSet,removeAttribute(String attributeName)
ConstraintSet,removeFromHorizontalChain(int viewId) Removes a view from a horizontal chain.
ConstraintSet,removeFromVerticalChain(int viewId) Removes a view from a vertical chain.
ConstraintSet,"setAlpha(int viewId, float alpha) Adjust the alpha of a view."
ConstraintSet,"setApplyElevation(int viewId, boolean apply) set if elevation will be applied to the view."
ConstraintSet,"setBarrierType(int id, int type)"
ConstraintSet,"setColorValue(int viewId, String attributeName, int value)"
ConstraintSet,"setDimensionRatio(int viewId, String ratio) Constrains the views aspect ratio."
ConstraintSet,"setElevation(int viewId, float elevation) Adjust the elevation of a view."
ConstraintSet,"setFloatValue(int viewId, String attributeName, float value)"
ConstraintSet,setForceId(boolean forceId) Enforce id are required for all ConstraintLayout children to use ConstraintSet.
ConstraintSet,"setGoneMargin(int viewId, int anchor, int value) Sets the gone margin."
ConstraintSet,"setGuidelineBegin(int guidelineID, int margin) Set the guideline's distance form the top or left edge."
ConstraintSet,"setGuidelineEnd(int guidelineID, int margin) Set a guideline's distance to end."
ConstraintSet,"setGuidelinePercent(int guidelineID, float ratio) Set a Guideline's percent."
ConstraintSet,"setHorizontalBias(int viewId, float bias) Adjust the horizontal bias of the view (used with views constrained on left and right)."
ConstraintSet,"setHorizontalChainStyle(int viewId, int chainStyle) How the elements of the horizontal chain will be positioned."
ConstraintSet,"setHorizontalWeight(int viewId, float weight) The child's weight that we can use to distribute the available horizontal space in a chain, if the dimension behaviour is set to MATCH_CONSTRAINT"
ConstraintSet,"setIntValue(int viewId, String attributeName, int value)"
ConstraintSet,"setMargin(int viewId, int anchor, int value) Sets the margin."
ConstraintSet,"setRotation(int viewId, float rotation) Adjust the post-layout rotation about the Z axis of a view."
ConstraintSet,"setRotationX(int viewId, float rotationX) Adjust the post-layout rotation about the X axis of a view."
ConstraintSet,"setRotationY(int viewId, float rotationY) Adjust the post-layout rotation about the Y axis of a view."
ConstraintSet,"setScaleX(int viewId, float scaleX) Adjust the post-layout scale in X of a view."
ConstraintSet,"setScaleY(int viewId, float scaleY) Adjust the post-layout scale in Y of a view."
ConstraintSet,"setStringValue(int viewId, String attributeName, String value)"
ConstraintSet,"setTransformPivot(int viewId, float transformPivotX, float transformPivotY) Set X,Y location of the pivot point around which the view will rotate and scale."
ConstraintSet,"setTransformPivotX(int viewId, float transformPivotX) Set X location of the pivot point around which the view will rotate and scale."
ConstraintSet,"setTransformPivotY(int viewId, float transformPivotY) Set Y location of the pivot point around which the view will rotate and scale."
ConstraintSet,"setTranslation(int viewId, float translationX, float translationY) Adjust the post-layout translation of a view."
ConstraintSet,"setTranslationX(int viewId, float translationX) Adjust the post-layout X translation of a view."
ConstraintSet,"setTranslationY(int viewId, float translationY) Adjust the post-layout Y translation of a view."
ConstraintSet,"setTranslationZ(int viewId, float translationZ) Adjust the translation in Z of a view."
ConstraintSet,"setVerticalBias(int viewId, float bias) Adjust the vertical bias of the view (used with views constrained on left and right)."
ConstraintSet,"setVerticalChainStyle(int viewId, int chainStyle) How the elements of the vertical chain will be positioned."
ConstraintSet,"setVerticalWeight(int viewId, float weight) The child's weight that we can use to distribute the available vertical space in a chain, if the dimension behaviour is set to MATCH_CONSTRAINT"
ConstraintSet,"setVisibility(int viewId, int visibility) Adjust the visibility of a view."
Group,getReferencedIds() Helpers typically reference a collection of ids
Group,"loadParameters(ConstraintSet.Constraint constraint, HelperWidget child, ConstraintLayout.LayoutParams layoutParams, mapIdToWidget)"
Group,"resolveRtl(ConstraintWidget widget, boolean isRtl)"
Group,setReferencedIds(int[] ids) Helpers typically reference a collection of ids
Group,updatePostConstraints(ConstraintLayout constainer)
Group,"updatePreLayout(ConstraintWidgetContainer container, Helper helper, map)"
Group,getViews(ConstraintLayout layout)
Guideline,setGuidelineBegin(int margin) Set the guideline's distance from the top or left edge.
Guideline,setGuidelineEnd(int margin) Set a guideline's distance to end.
Guideline,setGuidelinePercent(float ratio) Set a Guideline's percent.
Placeholder,getContent() Returns the content view
Placeholder,getEmptyVisibility() Returns the behaviour of a placeholder when it contains no view.
Placeholder,setContentId(int id) Sets the content view id
Placeholder,setEmptyVisibility(int visibility) Sets the visibility of placeholder when not containing objects typically gone or invisible.
LIB2,com.android.databinding::library
URL,https://developer.android.com/reference/android/databinding
GENERAL DESCRIPTION,
class-name,class-descriptipon
BaseObservable,A convenience class that implements Observable interface and provides notifyPropertyChanged(int) and notifyChange() methods.
CallbackRegistry,A utility for storing and notifying callbacks.
CallbackRegistry.NotifierCallback,Class used to notify events from CallbackRegistry.
DataBindingUtil,Utility class to create ViewDataBinding from layouts.
ListChangeRegistry,Utility class for managing ObservableList callbacks.
MapChangeRegistry,Utility class for managing ObservableMap callbacks.
MergedDataBinderMapper,A data binding mapper that merges other mappers.
Observable.OnPropertyChangedCallback,The callback that is called by Observable when an observable property has changed.
ObservableArrayList,An ObservableList implementation using ArrayList as an implementation.
ObservableArrayMap,
ObservableBoolean,An observable class that holds a primitive boolean.
ObservableByte,An observable class that holds a primitive byte.
ObservableChar,An observable class that holds a primitive char.
ObservableDouble,An observable class that holds a primitive double.
ObservableField,An object wrapper to make it observable.
ObservableFloat,An observable class that holds a primitive float.
ObservableInt,An observable class that holds a primitive int.
ObservableList.OnListChangedCallback,The callback that is called by ObservableList when the list has changed.
ObservableLong,An observable class that holds a primitive long.
ObservableMap.OnMapChangedCallback,A callback receiving notifications when an ObservableMap changes.
ObservableParcelable,An observable class that holds a parcelable object.
ObservableShort,An observable class that holds a primitive short.
OnRebindCallback,Listener set on addOnRebindCallback(OnRebindCallback) that is called when bound values must be reevaluated in executePendingBindings().
PropertyChangeRegistry,Utility class for managing Observable callbacks.
ViewDataBinding,Base class for generated data binding classes.
ViewStubProxy,This class represents a ViewStub before and after inflation.
class-of-method,method-name-description
BaseObservable,addOnPropertyChangedCallback(Observable.OnPropertyChangedCallback callback) Adds a callback to listen for changes to the Observable.
BaseObservable,notifyChange() Notifies listeners that all properties of this instance have changed.
BaseObservable,notifyPropertyChanged(int fieldId) Notifies listeners that a specific property has changed.
BaseObservable,removeOnPropertyChangedCallback(Observable.OnPropertyChangedCallback callback) Removes a callback from those listening for changes.
CallBackRegistry,add(C callback) Add a callback to be notified.
CallBackRegistry,clear() Removes all callbacks from the list.
CallBackRegistry,clone()
CallBackRegistry,copyCallbacks() Makes a copy of the registered callbacks and returns it.
CallBackRegistry,copyCallbacks(List<C> callbacks) Modifies callbacks to contain all callbacks in the CallbackRegistry.
CallBackRegistry,isEmpty() Returns true if there are no registered callbacks or false otherwise.
CallBackRegistry,"notifyCallbacks(T sender, int arg, A arg2) Notify all callbacks."
CallBackRegistry,remove(C callback) Remove a callback.
CallbackRegistry.NotifierCallback,"Called by CallbackRegistry during notifyCallbacks(Object, int, Object)} to notify the callback."
DataBindingUtil,bind(View root) Returns the binding for the given layout root or creates a binding if one does not exist.
DataBindingUtil,"bind(View root, DataBindingComponent bindingComponent) Returns the binding for the given layout root or creates a binding if one does not exist."
DataBindingUtil,convertBrIdToString(int id) Converts the given BR id to its string representation which might be useful for logging purposes.
DataBindingUtil,findBinding(View view) Retrieves the binding responsible for the given View.
DataBindingUtil,getBinding(View view) Retrieves the binding responsible for the given View layout root.
DataBindingUtil,getDefaultComponent() Returns the default DataBindingComponent used in data binding.
DataBindingUtil,"inflate(LayoutInflater inflater, int layoutId, ViewGroup parent, boolean attachToParent, DataBindingComponent bindingComponent) Inflates a binding layout and returns the newly-created binding for that layout."
DataBindingUtil,"inflate(LayoutInflater inflater, int layoutId, ViewGroup parent, boolean attachToParent) Inflates a binding layout and returns the newly-created binding for that layout."
DataBindingUtil,"setContentView(Activity activity, int layoutId) Set the Activity's content view to the given layout and return the associated binding."
DataBindingUtil,"setContentView(Activity activity, int layoutId, DataBindingComponent bindingComponent) Set the Activity's content view to the given layout and return the associated binding."
DataBindingUtil,setDefaultComponent(DataBindingComponent bindingComponent) Set the default DataBindingComponent to use for data binding.
ListChangeRegistry,"notifyCallbacks(ObservableList sender, int notificationType, ListChangeRegistry.ListChanges listChanges) Notify all callbacks."
ListChangeRegistry,"notifyChanged(ObservableList list, int start, int count) Notify registered callbacks that some elements have changed."
ListChangeRegistry,notifyChanged(ObservableList list) Notify registered callbacks that there was an unknown or whole-list change.
ListChangeRegistry,"notifyInserted(ObservableList list, int start, int count) Notify registered callbacks that elements were inserted."
ListChangeRegistry,"notifyMoved(ObservableList list, int from, int to, int count) Notify registered callbacks that elements were moved."
ListChangeRegistry,"notifyRemoved(ObservableList list, int start, int count) Notify registered callbacks that elements were deleted."
MapChangeRegistry,"notifyChange(ObservableMap sender, Object key) Notifies registered callbacks that an element has been added, removed, or changed."
MergedDataBinderMapper,convertBrIdToString(int id)
MergedDataBinderMapper,"getDataBinder(DataBindingComponent bindingComponent, View[] view, int layoutId)"
MergedDataBinderMapper,"getDataBinder(DataBindingComponent bindingComponent, View view, int layoutId)"
MergedDataBinderMapper,getLayoutId(String tag)
MergedDataBinderMapper,addMapper(DataBinderMapper mapper)
MergedDataBinderMapper,addMapper(String featureMapper)
Observable.OnPropertyChangedCallback,"onPropertyChanged(Observable sender, int propertyId) Called by an Observable whenever an observable property changes.
"
ObservableArrayList,add(T object)
ObservableArrayList,"add(int index, T object)"
ObservableArrayList,addAll(Collection<? extends T> collection)
ObservableArrayList,"addAll(int index, Collection<? extends T> collection)"
ObservableArrayList,addOnListChangedCallback(OnListChangedCallback listener)
ObservableArrayList,clear()
ObservableArrayList,remove(int index)
ObservableArrayList,remove(Object object)
ObservableArrayList,removeOnListChangedCallback(OnListChangedCallback listener)
ObservableArrayList,"set(int index, T object)"
ObservableArrayMap,"addOnMapChangedCallback(OnMapChangedCallback<? extends ObservableMap<K, V>, K, V> listener) Adds a callback to listen for changes to the ObservableMap."
ObservableArrayMap,clear()
ObservableArrayMap,"put(K k, V v)"
ObservableArrayMap,removeAll(Collection<?> collection)
ObservableArrayMap,removeAt(int index)
ObservableArrayMap,"removeOnMapChangedCallback(OnMapChangedCallback<? extends ObservableMap<K, V>, K, V> listener) Removes a previously added callback."
ObservableArrayMap,retainAll(Collection<?> collection)
ObservableArrayMap,"setValueAt(int index, V value)"
ObservableBoolean,describeContents()
ObservableBoolean,get()
ObservableBoolean,set(boolean value) Set the stored value.
ObservableBoolean,"writeToParcel(Parcel dest, int flags)"
ObservableByte,ObservableByte(byte value) Creates an ObservableByte with the given initial value.
ObservableByte,ObservableByte() Creates an ObservableByte with the initial value of 0.
ObservableByte,ObservableByte(Observable... dependencies) Creates an ObservableByte that depends on dependencies.
ObservableByte,describeContents()
ObservableByte,get()
ObservableByte,set(byte value) Set the stored value.
ObservableByte,"writeToParcel(Parcel dest, int flags)"
ObservableChar,ObservableChar(char value) Creates an ObservableChar with the given initial value.
ObservableChar,ObservableChar() Creates an ObservableChar with the initial value of 0.
ObservableChar,ObservableChar(Observable... dependencies) Creates an ObservableChar that depends on dependencies.
ObservableChar,describeContents()
ObservableChar,get()
ObservableChar,set(char value) Set the stored value.
ObservableChar,"writeToParcel(Parcel dest, int flags)"
ObservableDouble,describeContents()
ObservableDouble,get()
ObservableDouble,set(double value) Set the stored value.
ObservableDouble,"writeToParcel(Parcel dest, int flags)"
ObservableField,get()
ObservableField,set(T value) Set the stored value.
ObservableFloat,describeContents()
ObservableFloat,get()
ObservableFloat,set(float value) Set the stored value.
ObservableFloat,"writeToParcel(Parcel dest, int flags)"
ObservableInt,describeContents()
ObservableInt,get()
ObservableInt,set(int value) Set the stored value.
ObservableInt,"writeToParcel(Parcel dest, int flags)"
ObservableList.OnListChangedCallback,"onChanged(T sender) Called whenever a change of unknown type has occurred, such as the entire list being set to new values."
ObservableList.OnListChangedCallback,"onItemRangeChanged(T sender, int positionStart, int itemCount) Called whenever one or more items in the list have changed."
ObservableList.OnListChangedCallback,"onItemRangeInserted(T sender, int positionStart, int itemCount) Called whenever items have been inserted into the list."
ObservableList.OnListChangedCallback,"onItemRangeMoved(T sender, int fromPosition, int toPosition, int itemCount) Called whenever items in the list have been moved."
ObservableList.OnListChangedCallback,"onItemRangeRemoved(T sender, int positionStart, int itemCount) Called whenever items in the list have been deleted."
ObservableLong,describeContents()
ObservableLong,get()
ObservableLong,set(long value) Set the stored value.
ObservableLong,"writeToParcel(Parcel dest, int flags)"
ObservableMap.OnMapChangedCallback,"onMapChanged(T sender, K key) Called whenever an ObservableMap changes, including values inserted, deleted, and changed."
ObservableParcelable,describeContents()
ObservableParcelable,"writeToParcel(Parcel dest, int flags)"
ObservableShort,describeContents()
ObservableShort,get()
ObservableShort,set(short value) Set the stored value.
ObservableShort,"writeToParcel(Parcel dest, int flags)"
OnRebindCallback,onBound(T binding) Called after values have been reevaluated in executePendingBindings().
OnRebindCallback,onCanceled(T binding) Called after all callbacks have completed onPreBind(ViewDataBinding) when one or more of the calls has returned false.
OnRebindCallback,onPreBind(T binding) Called when values in a ViewDataBinding should be reevaluated.
PropertyChangeRegistry,"notifyChange(Observable observable, int propertyId) Notifies registered callbacks that a specific property has changed."
ViewDataBinding,addOnRebindCallback(OnRebindCallback listener) Add a listener to be called when reevaluating dirty fields.
ViewDataBinding,"executePendingBindings() Evaluates the pending bindings, updating any Views that have expressions bound to modified variables."
ViewDataBinding,getRoot() Returns the outermost View in the layout file associated with the Binding.
ViewDataBinding,hasPendingBindings() Returns whether the UI needs to be refresh to represent the current data.
ViewDataBinding,invalidateAll() Invalidates all binding expressions and requests a new rebind to refresh UI.
ViewDataBinding,removeOnRebindCallback(OnRebindCallback listener) Removes a listener that was added in addOnRebindCallback(OnRebindCallback).
ViewDataBinding,setLifecycleOwner(LifecycleOwner lifecycleOwner) Sets the LifecycleOwner that should be used for observing changes of LiveData in this binding.
ViewDataBinding,"setVariable(int variableId, Object value) Set a value value in the Binding class."
ViewDataBinding,unbind() Removes binding listeners to expression variables.
ViewStubProxy,getBinding() Returns the data binding associated with the inflated layout once it has been inflated.
ViewStubProxy,getRoot() Returns the root View of the layout replacing the ViewStub once it has been inflated.
ViewStubProxy,getViewStub() Returns the ViewStub in the layout or null if the ViewStub has been inflated.
ViewStubProxy,isInflated() Returns true if the ViewStub has replaced itself with the inflated layout or false if not.
ViewStubProxy,setContainingBinding(ViewDataBinding containingBinding)
ViewStubProxy,setOnInflateListener(ViewStub.OnInflateListener listener) Sets the ViewStub.OnInflateListener to be called when the ViewStub inflates.
LIB3,com.android.databinding::adapters
URL,https://developer.android.com/reference/android/databinding/adapters/package-summary
GENERAL DESCRIPTION,
class-name,class-description
Converters,Build in converters to converts for color.
ListenerUtil,Utility class that helps with tracking listeners for views from binding adapters.
class-of-method,method-name-description
Converters,convertColorToColorStateList(int color) Converts int color into a ColorStateList.
Converters,convertColorToDrawable(int color) Converts int color into a ColorDrawable.
ListenerUtil,"getListener(View view, int listenerResourceId) Returns the previous value for a listener if one was stored previously with trackListener(View, Object, int)"
ListenerUtil,"trackListener(View view, T listener, int listenerResourceId) This method tracks listeners for a View."
LIB4,com.android.support::support-compat
URL,https://developer.android.com/reference/android/support/compat/package-summary
GENERAL DESCRIPTION,
class-name,class-description
R,
R.attr,
R.bool,
R.color,
R.dimen,
R.drawable,
R.id,
R.integer,
R.layout,
R.string,
R.style,
R.styleable,
class-of-method,method-name-description
,
LIB5,com.android.support::leanback-v17
URL,https://developer.android.com/reference/android/support/v17/leanback/package-summary
GENERAL DESCRIPTION,
class-name,class-description
R,
R.anim,
R.animator,
R.attr,
R.bool,
R.color,
R.dimen,
R.drawable,
R.fraction,
R.id,
R.integer,
R.layout,
R.raw,
R.string,
R.style,
R.styleable,
R.transition,
class-of-method,method-name-description
LIB6,com.android.support::recommendation
URL,https://developer.android.com/reference/android/support/recommendation/package-summary
GENERAL DESCRIPTION,
class-name,class-description
R,
class-of-method,method-name-description
LIB7,com.android.support::preference-v14
URL,https://developer.android.com/reference/android/support/v14/preference/package-summary
GENERAL DESCRIPTION,
class-name,class-description
EditTextPreferenceDialogFragment,
ListPreferenceDialogFragment,
MultiSelectListPreference,A Preference that displays a list of entries as a dialog.
MultiSelectListPreferenceDialogFragment,
PreferenceDialogFragment,Abstract base class which presents a dialog associated with a DialogPreference.
PreferenceFragment,Shows a hierarchy of Preference objects as lists.
R,
R.anim,
R.attr,
R.bool,
R.color,
R.dimen,
R.drawable,
R.id,
R.integer,
R.layout,
R.string,
R.style,
R.styleable,
SwitchPreference,A Preference that provides a two-state toggleable option.
class-of-method,method-name-description
EditTextPreferenceDialogFragment,newInstance(String key)
EditTextPreferenceDialogFragment,onCreate(Bundle savedInstanceState)
EditTextPreferenceDialogFragment,onDialogClosed(boolean positiveResult)
EditTextPreferenceDialogFragment,onSaveInstanceState(Bundle outState)
ListPreferenceDialogFragment,newInstance(String key)
ListPreferenceDialogFragment,onCreate(Bundle savedInstanceState)
ListPreferenceDialogFragment,onDialogClosed(boolean positiveResult)
ListPreferenceDialogFragment,onSaveInstanceState(Bundle outState)
ListPreferenceDialogFragment,onPrepareDialogBuilder(AlertDialog.Builder builder) Prepares the dialog builder to be shown when the preference is clicked.
MultiSelectListPreference,findIndexOfValue(String value) Returns the index of the given value (in the entry mValues array).
MultiSelectListPreference,getEntries() The list of entries to be shown in the list in subsequent dialogs.
MultiSelectListPreference,getEntryValues() Returns the array of mValues to be saved for the preference.
MultiSelectListPreference,getValues() Retrieves the current value of the key.
MultiSelectListPreference,setEntries(CharSequence[] entries) Sets the human-readable entries to be shown in the list.
MultiSelectListPreference,setEntries(int entriesResId)
MultiSelectListPreference,setEntryValues(int entryValuesResId)
MultiSelectListPreference,setEntryValues(CharSequence[] entryValues) The array to find the value to save for a preference when an entry from entries is selected.
MultiSelectListPreference,setValues(Set<String> values) Sets the value of the key.
MultiSelectListPreference,getSelectedItems()
MultiSelectListPreference,"onGetDefaultValue(TypedArray a, int index) Called when a Preference is being inflated and the default value attribute needs to be read."
MultiSelectListPreference,onRestoreInstanceState(Parcelable state) Hook allowing a Preference to re-apply a representation of its internal state that had previously been generated by onSaveInstanceState().
MultiSelectListPreference,onSaveInstanceState() Hook allowing a Preference to generate a representation of its internal state that can later be used to create a new instance with that same state.
MultiSelectListPreference,"onSetInitialValue(boolean restoreValue, Object defaultValue) Implement this to set the initial value of the Preference."
MultiSelectListPreferenceDialogFragment,newInstance(String key)
MultiSelectListPreferenceDialogFragment,onCreate(Bundle savedInstanceState)
MultiSelectListPreferenceDialogFragment,onDialogClosed(boolean positiveResult)
MultiSelectListPreferenceDialogFragment,onSaveInstanceState(Bundle outState)
MultiSelectListPreferenceDialogFragment,onPrepareDialogBuilder(AlertDialog.Builder builder) Prepares the dialog builder to be shown when the preference is clicked.
PreferenceDialogFragment,getPreference() Get the preference that requested this dialog.
PreferenceDialogFragment,"onClick(DialogInterface dialog, int which)"
PreferenceDialogFragment,onCreate(Bundle savedInstanceState)
PreferenceDialogFragment,onCreateDialog(Bundle savedInstanceState)
PreferenceDialogFragment,onDialogClosed(boolean positiveResult)
PreferenceDialogFragment,onDismiss(DialogInterface dialog)
PreferenceDialogFragment,onSaveInstanceState(Bundle outState)
PreferenceDialogFragment,onBindDialogView(View view) Binds views in the content View of the dialog to data.
PreferenceDialogFragment,onCreateDialogView(Context context) Creates the content view for the dialog (if a custom content view is required).
PreferenceDialogFragment,onPrepareDialogBuilder(AlertDialog.Builder builder) Prepares the dialog builder to be shown when the preference is clicked.
PreferenceFragment,addPreferencesFromResource(int preferencesResId) Inflates the given XML resource and adds the preference hierarchy to the current preference hierarchy.
PreferenceFragment,findPreference(CharSequence key) Finds a Preference based on its key.
PreferenceFragment,getListView()
PreferenceFragment,getPreferenceManager() Returns the PreferenceManager used by this fragment.
PreferenceFragment,getPreferenceScreen() Gets the root of the preference hierarchy that this fragment is showing.
PreferenceFragment,onActivityCreated(Bundle savedInstanceState)
PreferenceFragment,onCreate(Bundle savedInstanceState)
PreferenceFragment,"onCreateLayoutManager() Called from onCreateRecyclerView(LayoutInflater, ViewGroup, Bundle) to create the RecyclerView.LayoutManager for the created RecyclerView."
PreferenceFragment,"onCreatePreferences(Bundle savedInstanceState, String rootKey) Called during onCreate(Bundle) to supply the preferences for this fragment."
PreferenceFragment,"onCreateRecyclerView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState) Creates the RecyclerView used to display the preferences."
PreferenceFragment,"onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)"
PreferenceFragment,onDestroyView()
PreferenceFragment,onDisplayPreferenceDialog(Preference preference) Called when a preference in the tree requests to display a dialog.
PreferenceFragment,onNavigateToScreen(PreferenceScreen preferenceScreen) Called by onClick() in order to navigate to a new screen of preferences.
PreferenceFragment,onPreferenceTreeClick(Preference preference) Called when a preference in the tree rooted at this PreferenceScreen has been clicked.
PreferenceFragment,onSaveInstanceState(Bundle outState)
PreferenceFragment,onStart()
PreferenceFragment,onStop()
PreferenceFragment,"onViewCreated(View view, Bundle savedInstanceState)"
PreferenceFragment,scrollToPreference(Preference preference)
PreferenceFragment,scrollToPreference(String key)
PreferenceFragment,setDivider(Drawable divider) Sets the drawable that will be drawn between each item in the list.
PreferenceFragment,setDividerHeight(int height) Sets the height of the divider that will be drawn between each item in the list.
PreferenceFragment,setPreferenceScreen(PreferenceScreen preferenceScreen) Sets the root of the preference hierarchy that this fragment is showing.
PreferenceFragment,"setPreferencesFromResource(int preferencesResId, String key) Inflates the given XML resource and replaces the current preference hierarchy (if any) with the preference hierarchy rooted at key."
PreferenceFragment,onCreateAdapter(PreferenceScreen preferenceScreen) Creates the root adapter.
SwitchpPreference,getSwitchTextOff()
SwitchpPreference,getSwitchTextOn()
SwitchpPreference,onBindViewHolder(PreferenceViewHolder holder) Binds the created View to the data for this Preference.
SwitchpPreference,setSwitchTextOff(int resId) Set the text displayed on the switch widget in the off state.
SwitchpPreference,setSwitchTextOff(CharSequence offText) Set the text displayed on the switch widget in the off state.
SwitchpPreference,setSwitchTextOn(CharSequence onText) Set the text displayed on the switch widget in the on state.
SwitchpPreference,setSwitchTextOn(int resId) Set the text displayed on the switch widget in the on state.
LIB8,com.android.support::percent
URL,https://developer.android.com/reference/android/support/percent/package-summary
GENERAL DESCRIPTION,
class-name,class-description
PercentFrameLayout,"This class was deprecated in API level 26.1.0. consider using ConstraintLayout and associated layouts instead. The following shows how to replicate the functionality of percentage layouts with a ConstraintLayout. The Guidelines are used to define each percentage break point, and then a Button view is stretched to fill the gap: "
PercentFrameLayout.LayoutParams,This class was deprecated in API level 26.1.0. this class is deprecated along with its parent class.
PercentLayoutHelper,"This class was deprecated in API level 26.1.0. consider using ConstraintLayout and associated layouts instead. The following shows how to replicate the functionality of percentage layouts with a ConstraintLayout. The Guidelines are used to define each percentage break point, and then a Button view is stretched to fill the gap:"
PercentLayoutHelper.PercentLayoutInfo,This class was deprecated in API level 26.1.0. use ConstraintLayout and Guidelines for layout support.
PercentRelativeLayout,"This class was deprecated in API level 26.1.0. consider using ConstraintLayout and associated layouts instead. The following shows how to replicate the functionality of percentage layouts with a ConstraintLayout. The Guidelines are used to define each percentage break point, and then a Button view is stretched to fill the gap:"
PercentRelativeLayout.LayoutParams,This class was deprecated in API level 26.1.0. this class is deprecated along with its parent class.
R,
R.attr,
R.bool,
R.color,
R.dimen,
R.drawable,
R.id,
R.integer,
R.layout,
R.string,
R.style,
R.styleable,
class-of-method,method-name-description
PercentFrameLayout,generateLayoutParams(AttributeSet attrs)
PercentFrameLayout,generateDefaultLayoutParams()
PercentFrameLayout,"onLayout(boolean changed, int left, int top, int right, int bottom)"
PercentFrameLayout,"onMeasure(int widthMeasureSpec, int heightMeasureSpec)"
PercentFrameLayout.LayoutParams,getPercentLayoutInfo()
PercentFrameLayout.LayoutParams,"setBaseAttributes(TypedArray a, int widthAttr, int heightAttr)"
PercentLayoutHelper,"adjustChildren(int widthMeasureSpec, int heightMeasureSpec) Iterates over children and changes their width and height to one calculated from percentage values."
PercentLayoutHelper,"fetchWidthAndHeight(ViewGroup.LayoutParams params, TypedArray array, int widthAttr, int heightAttr) Helper method to be called from setBaseAttributes(TypedArray, int, int) override that reads layout_width and layout_height attribute values without throwing an exception if they aren't present."
PercentLayoutHelper,"getPercentLayoutInfo(Context context, AttributeSet attrs) Constructs a PercentLayoutInfo from attributes associated with a View."
PercentLayoutHelper,handleMeasuredStateTooSmall() Iterates over children and checks if any of them would like to get more space than it received through the percentage dimension.
PercentLayoutHelper,restoreOriginalParams() Iterates over children and restores their original dimensions that were changed for percentage values.
PercentLayoutHelper.PercentLayoutInfo,"fillLayoutParams(ViewGroup.LayoutParams params, int widthHint, int heightHint) Fills the width and height fields of the passed ViewGroup.LayoutParams object based on currently set percentage values."
PercentLayoutHelper.PercentLayoutInfo,"fillMarginLayoutParams(View view, ViewGroup.MarginLayoutParams params, int widthHint, int heightHint) Fills the margin fields of the passed ViewGroup.MarginLayoutParams object based on currently set percentage values and the current layout direction of the passed View."
PercentLayoutHelper.PercentLayoutInfo,"fillMarginLayoutParams(ViewGroup.MarginLayoutParams params, int widthHint, int heightHint) This method was deprecated in API level 24.1.0. Use fillMarginLayoutParams(View, ViewGroup.MarginLayoutParams, int, int) for proper RTL support."
PercentLayoutHelper.PercentLayoutInfo,restoreLayoutParams(ViewGroup.LayoutParams params) Restores original dimensions after they were changed for percentage based values.
PercentLayoutHelper.PercentLayoutInfo,restoreMarginLayoutParams(ViewGroup.MarginLayoutParams params) Restores the original dimensions and margins after they were changed for percentage based values.
PercentLayoutHelper.PercentLayoutInfo,toString()
PercentRelativeLayout,generateDefaultLayoutParams()
PercentRelativeLayout,"onLayout(boolean changed, int left, int top, int right, int bottom)"
PercentRelativeLayout,"onMeasure(int widthMeasureSpec, int heightMeasureSpec)"
PercentRelativeLayout,getPercentLayoutInfo()
PercentRelativeLayout.LayoutParams,"setBaseAttributes(TypedArray a, int widthAttr, int heightAttr)"
LIB9,com.android.support::cardview-v7
URL,https://developer.android.com/reference/android/support/v7/cardview/package-summary
GENERAL DESCRIPTION,
class-name,class-description
R,
R.attr,
R.bool,
R.color,
R.dimen,
R.style,
R.styleable,